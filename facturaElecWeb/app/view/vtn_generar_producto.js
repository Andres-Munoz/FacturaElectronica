/*
 * File: app/view/vtn_generar_producto.js
 *
 * This file was generated by Sencha Architect version 4.2.5.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('facturaElecWeb.view.vtn_generar_producto', {
    extend: 'Ext.Dialog',
    alias: 'widget.vtn_generar_producto',

    requires: [
        'facturaElecWeb.view.vtn_generar_productoViewModel',
        'Ext.form.Panel',
        'Ext.Img',
        'Ext.field.Number',
        'Ext.Button'
    ],

    viewModel: {
        type: 'vtn_generar_producto'
    },
    height: '90%',
    id: 'vtn_generar_producto',
    itemId: 'vtn_generar_producto',
    name: 'vtn_generar_producto',
    width: '60%',
    displayed: true,
    scrollable: false,
    layout: 'center',
    closable: true,
    closeToolText: 'Cerrar',
    titleAlign: 'center',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'formpanel',
            id: 'frm_productos',
            width: '100%',
            items: [
                {
                    xtype: 'container',
                    name: 'ctn_image_company',
                    margin: '-7 0 10 0',
                    layout: {
                        type: 'hbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'image',
                            cls: 'image-generic-frm',
                            name: 'image_frm_product',
                            src: 'https://image.flaticon.com/icons/svg/1170/1170628.svg'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    name: 'ctn_frm_product',
                    scrollable: 'vertical',
                    layout: {
                        type: 'hbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'container',
                            name: 'ctn_column_left_product',
                            width: '45%',
                            margin: '0 10 0 0',
                            items: [
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {

                                        var store= Ext.getStore('store_gestion_producto');
                                        var Existente=false;
                                        var idProduct=null;
                                        var idForm=Ext.getCmp('frm_productos').getRecord()?Ext.getCmp('frm_productos').getRecord().id :null;
                                        store.each(function(record){
                                            if(value == record.data.codigo){
                                                Existente=true;
                                                idProduct=record.id;
                                            }
                                        });


                                        if ((!Ext.isEmpty(value)) && (Ext.isEmpty(value.trim()))) {

                                            return "El campo codigo no admite espacios";
                                        }else if(value.length>50){
                                            return "El numero de codigo supera el tamaño permitido (50)";
                                        }else if(!/^([0-9])*$/.test(value)){
                                            return "El codigo debe ser  un número entero";
                                        }else if(Existente && idProduct!=idForm){
                                            return "Ya existe un producto con este codigo";
                                        }else{
                                            return true;
                                        }
                                    },
                                    name: 'codigo',
                                    width: '100%',
                                    label: 'Código',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite un código',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {
                                        if(value.length>100){
                                            return "El campo marca supera el tamaño permitido (100)";
                                        }else if(/^([0-9])*$/.test(value)){
                                            return "El campo marca tiene caracteres invalidos.(0-9)";
                                        }else{
                                            return true;
                                        }
                                    },
                                    name: 'marca',
                                    width: '100%',
                                    label: 'Marca',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite una marca',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {
                                        if ((!Ext.isEmpty(value)) && (Ext.isEmpty(value.trim()))) {
                                            return "El campo precio no admite espacios";
                                        }else if(value.length>50){
                                            return "El campo precio supera el tamaño permitido (50)";
                                        }else if(!/^([0-9])*$/.test(value)){
                                            return "El precio debe ser  un número entero";
                                        }else {
                                            return true;
                                        }
                                    },
                                    id: 'txt_precio_producto',
                                    name: 'precio',
                                    width: '100%',
                                    label: 'Precio',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite un precio',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'container',
                                    cls: 'border-cantidad-factura-producto',
                                    name: 'ctn_cantidad_producto',
                                    padding: 5,
                                    bind: {
                                        hidden: '{detalleProducto}'
                                    },
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            validators: function(value) {
                                                if(value.length>9){
                                                    return "El campo cantidad supera el tamaño permitido (20)";
                                                }else if(!/^([0-9])*$/.test(value)){
                                                    return "La cantidad debe ser  un número entero";
                                                }else {
                                                    return true;
                                                }
                                            },
                                            id: 'txt_cantidad_producto',
                                            name: 'cantidad',
                                            label: 'Cantidad',
                                            labelCls: 'my-text',
                                            required: true,
                                            requiredMessage: 'Digite una cantidad',
                                            bind: {
                                                hidden: '{detalleProducto}'
                                            },
                                            listeners: {
                                                keyup: 'onTxt_cantidad_productoKeyup1'
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            name: 'ctn_column_rigth_company',
                            width: '45%',
                            margin: '0 0 0 10',
                            layout: 'vbox',
                            items: [
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {
                                        if(value.length>100){
                                            return "El nombre supera el tamaño permitido (100)";
                                        }else if(/^([0-9])*$/.test(value)){
                                            return "El nombre tiene caracteres invalidos.(0-9)";
                                        }else{
                                            return true;
                                        }
                                    },
                                    name: 'nombre',
                                    width: '100%',
                                    label: 'Nombre',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite un nombre',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {
                                        if ((!Ext.isEmpty(value)) && (Ext.isEmpty(value.trim()))) {
                                            return "El campo garantia no admite espacios";
                                        }else if(value.length>4){
                                            return "El campo garantia supera el tamaño permitido (4)";
                                        }else if(!/^([0-9])*$/.test(value)){
                                            return "El campo garantia debe ser  un número entero";
                                        }else {
                                            return true;
                                        }
                                    },
                                    name: 'garantia',
                                    width: '100%',
                                    label: 'Garantia  (Meses)',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite una garantia',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    validators: function(value) {
                                        if(value.length>2500){
                                            return "El campo descripcion supera el tamaño permitido (2500)";
                                        }else{
                                            return true;
                                        }
                                    },
                                    name: 'descripcion',
                                    width: '100%',
                                    label: 'Descripción',
                                    labelCls: 'my-text',
                                    required: true,
                                    requiredMessage: 'Digite una descripción',
                                    bind: {
                                        clearable: '{detalleProducto}',
                                        editable: '{detalleProducto}'
                                    }
                                },
                                {
                                    xtype: 'container',
                                    cls: 'border-totalProducto-factura-producto',
                                    name: 'ctn_total_producto',
                                    padding: 5,
                                    bind: {
                                        hidden: '{detalleProducto}'
                                    },
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            id: 'txt_total_producto',
                                            name: 'totalProducto',
                                            label: 'Total',
                                            labelCls: 'my-text',
                                            required: true,
                                            requiredMessage: 'Digite una cantidad',
                                            clearable: false,
                                            bind: {
                                                hidden: '{detalleProducto}',
                                                editable: '{detalleProducto}'
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            name: 'id',
                            label: 'Field'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    height: '30%',
                    name: 'ctn_buttons_company',
                    width: '100%',
                    padding: '10 0 0 0',
                    layout: {
                        type: 'hbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {

                                if(Ext.getCmp('vtn_generar_producto').getViewModel().get('detalleProducto')===false){
                                    var form = Ext.getCmp('frm_productos');
                                    var values = form.getValues();
                                    if (form.validate()){
                                        Ext.Msg.show({
                                            title: 'Confirmación',
                                            message: '¿Está seguro de agregar el producto con codigo '+values.codigo+ '?' ,
                                            width: 300,
                                            closable: false,
                                            buttons: [{
                                                text: 'No',
                                                itemId: 'no'
                                            }, {
                                                text: 'Si',
                                                itemId: 'yes'
                                            }],
                                            multiline: false,
                                            fn: function (buttonValue, inputText, showConfig) {
                                                if(buttonValue === "yes"){
                                                    Ext.getStore('store_gestion_producto_factura').add(values);
                                                    Ext.getCmp('grd_productos_factura').refresh();
                                                    Ext.getCmp('vtn_generar_producto').close();
                                                    Ext.toast('El producto se agreco con exito', 1000);
                                                }else{
                                                    this.close();
                                                }
                                            },
                                            icon: Ext.Msg.QUESTION
                                        });
                                    }else{
                                        Ext.toast('Error al validar el formulario!', 1000);
                                    }

                                }else{

                                    Ext.getCmp('txt_cantidad_producto').setRequired(false);
                                    Ext.getCmp('txt_total_producto').setRequired(false);
                                    var form = Ext.getCmp('frm_productos');
                                    var values = form.getValues();
                                    if (form.validate()){
                                        if(form.getRecord()){
                                            var record = form.getRecord();
                                            record.set(values);
                                            Ext.Ajax.request({
                                                url: 'productoController/actualizarProducto',
                                                method: 'POST',
                                                params: {
                                                    id:values.id,
                                                    codigo:values.codigo,
                                                    marca:values.marca,
                                                    nombre:values.nombre,
                                                    garantia:values.garantia,
                                                    precio:values.precio,
                                                    descripcion:values.descripcion

                                                },
                                                success: function(response, opts) {
                                                    Ext.getCmp('ctn_product_view').fn_find_product(null);
                                                    Ext.getCmp('data_view_product').setStore('');
                                                    Ext.getCmp('ctn_product_view').getViewModel().set('filtro',null);
                                                    Ext.ComponentQuery.query('[itemId=search_field_product]')[0].setValue('');
                                                    Ext.toast('Edición Exitosa', 1000);

                                                },
                                                failure: function(response, opts) {
                                                    Ext.toast('Error al llevar a cabo el proceso', 1000);
                                                }
                                            });
                                            Ext.getCmp('vtn_generar_producto').unmask();
                                            Ext.getCmp('vtn_generar_producto').close();
                                        }else{
                                            form.submit({

                                                url: "productoController/agregarProducto",
                                                waitMsg: 'espere',
                                                success: function(response, opts) {
                                                    Ext.getStore('store_gestion_producto').load();
                                                    var info =Ext.getCmp('ctn_statistics_view').getViewModel().get('filtro');
                                                    Ext.getCmp('ctn_statistics_view').fn_find_statistcs(info);
                                                    Ext.toast('Creación Exitosa', 1000);

                                                },
                                                failure: function(response, opts) {
                                                    Ext.toast('Error al llevar a cabo el proceso', 1000);
                                                }

                                            });
                                            Ext.getCmp('vtn_generar_producto').unmask();
                                            Ext.getCmp('vtn_generar_producto').close();

                                        }

                                    }else{
                                        Ext.toast('Error al validar el formulario!', 1000);
                                    }
                                }

                            },
                            cls: 'color-buttons',
                            height: 50,
                            id: 'btn_producto',
                            ui: 'round',
                            width: 50,
                            tooltip: 'Continuar proceso',
                            iconCls: 'x-fa fa-check blackIcon',
                            bind: {
                                hidden: '{detalleSaveFactura}'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {

                                var store = Ext.getStore('store_gestion_producto_factura');
                                var codigo = Ext.getCmp('frm_productos').getValues().codigo;

                                if(store.data.length != 0){
                                    Ext.Msg.show({
                                        title: 'Confirmación',
                                        message: "¿Esta seguro de eliminar el producto con codigo "+codigo+" de la factura?",
                                        width: 300,
                                        closable: false,
                                        buttons: [{
                                            text: 'No',
                                            itemId: 'no'
                                        }, {
                                            text: 'Si',
                                            itemId: 'yes'
                                        }],
                                        multiline: false,
                                        fn: function (buttonValue, inputText, showConfig) {
                                            if(buttonValue === "yes"){

                                                store.remove(Ext.getStore('store_gestion_producto_factura').findRecord('codigo',codigo));
                                                var storeData = Ext.getStore('store_gestion_producto_factura').data;
                                                var totalFactura = 0;
                                                for(var i = 0; i < storeData.length; i++){
                                                    totalFactura = totalFactura + storeData.items[i].data.totalProducto;
                                                }if(totalFactura === 0){
                                                    Ext.getCmp('txt_total_factura').setValue(null);
                                                }else{
                                                    Ext.getCmp('txt_total_factura').setValue(totalFactura);
                                                }
                                                Ext.getCmp('vtn_generar_producto').close();
                                                Ext.toast('Exito al eliminar!', 1000);

                                            }else{
                                                this.close();
                                            }
                                        },
                                        icon: Ext.Msg.QUESTION
                                    });

                                }else{
                                    Ext.toast('No es posible eliminar, comuniquese con el administrador!', 1000);

                                }
                            },
                            cls: 'color-buttons',
                            height: 50,
                            name: 'btn_delete',
                            ui: 'round',
                            width: 50,
                            tooltip: 'Remover producto',
                            iconCls: 'x-fa fa-trash blackIcon',
                            bind: {
                                hidden: '{detalleCrearFactura}'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var store = Ext.getStore('store_gestion_producto_factura');
                                var form = Ext.getCmp('frm_productos');
                                var codigo = form.getValues().codigo;
                                var total = form.getValues().totalProducto;
                                var cantidad = form.getValues().cantidad;
                                var data = store.data.items;
                                for(var i = 0 ; i < data.length ; i++){
                                    if(data[i].data.codigo === codigo){
                                        data[i].data.cantidad = cantidad;
                                        data[i].data.totalProducto = total;
                                    }
                                }
                                store.setData(null);
                                store.setData(data);
                                debugger;
                                var totalFactura = 0;
                                for(var i = 0; i < store.data.length; i++){
                                    totalFactura = totalFactura + store.data.items[i].data.totalProducto;
                                }if(totalFactura === 0){
                                    Ext.getCmp('txt_total_factura').setValue(null);
                                }else{
                                    Ext.getCmp('txt_total_factura').setValue(totalFactura);
                                }
                                Ext.getCmp('vtn_generar_producto').close();
                                Ext.toast('Exito al editar el producto', 1000);
                            },
                            cls: 'color-buttons',
                            height: 50,
                            name: 'btn_save_cache',
                            ui: 'round',
                            width: 50,
                            tooltip: 'Guardar cambio',
                            iconCls: 'x-fa fa-share-square-o blackIcon',
                            bind: {
                                hidden: '{detalleCrearFactura}'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onTxt_cantidad_productoKeyup1: function(textfield, e, eOpts) {
        if (((e.event.keyCode >= 48) &&(e.event.keyCode <= 57)) ||((e.event.keyCode >= 96) &&(e.event.keyCode <= 105)) || (e.event.keyCode === 8)) {
            Ext.getCmp('txt_total_producto').setValue(Ext.getCmp('txt_precio_producto').getValue() * textfield.getValue());
        }
        if(!textfield.getValue() || textfield.getValue() === 0){
            Ext.getCmp('txt_total_producto').setValue();
        }
    }

});