/*
 * File: app/view/ctn_product_view.js
 *
 * This file was generated by Sencha Architect version 4.2.5.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('facturaElecWeb.view.ctn_product_view', {
    extend: 'Ext.Container',
    alias: 'widget.ctn_product_view',

    requires: [
        'facturaElecWeb.view.ctn_product_viewViewModel',
        'facturaElecWeb.view.ctn_product_viewViewController',
        'facturaElecWeb.view.grd_product',
        'Ext.field.Search',
        'Ext.dataview.DataView',
        'Ext.XTemplate',
        'Ext.Button',
        'Ext.grid.Grid'
    ],

    controller: 'ctn_product_view',
    viewModel: {
        type: 'ctn_product_view'
    },
    id: 'ctn_product_view',
    layout: 'hbox',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'container',
            flex: 2.5,
            cls: 'borde-gestion-info',
            name: 'ctn_info_product',
            padding: '50 0 50 0',
            layout: 'vbox',
            items: [
                {
                    xtype: 'container',
                    flex: 0.5,
                    name: 'ctn_search_product',
                    layout: 'center',
                    items: [
                        {
                            xtype: 'searchfield',
                            validators: function(value) {
                                if(!/^([0-9])*$/.test(value)){
                                    return "El codigo debe ser  un número entero";
                                }else if(value<0){
                                    return "La cantidad de caracteres ingresada es inválida";

                                }else{
                                    return true;
                                }
                            },
                            itemId: 'search_field_product',
                            name: 'search_field_product',
                            width: '70%',
                            labelCls: 'my-text',
                            placeholder: 'Buscar por codigo',
                            listeners: {
                                keyup: 'onSearch_field_productKeyup'
                            }
                        }
                    ]
                },
                {
                    xtype: 'dataview',
                    id: 'data_view_product',
                    padding: '0 0 0 30',
                    itemTpl: [
                        '<div class="table-generic">',
                        '    <table>',
                        '',
                        '        <tbody >',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Codigo:</th>',
                        '',
                        '                <td class="row-generic">{codigo}</td>',
                        '',
                        '            </tr>',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Marca:</th>',
                        '',
                        '                <td class="row-generic">{marca}</td>',
                        '',
                        '            </tr>',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Nombre:</th>',
                        '',
                        '                <td class="row-generic">{nombre}</td>',
                        '',
                        '            </tr>',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Garantia:</th>',
                        '',
                        '                <td class="row-generic">{garantia}</td>',
                        '',
                        '            </tr>',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Descripción:</th>',
                        '',
                        '                <td class="row-generic">{descripcion}</td>',
                        '',
                        '            </tr>',
                        '            <tr>',
                        '',
                        '                <th class="row-generic">Precio:</th>',
                        '',
                        '                <td class="row-generic">$ {precio}</td>',
                        '',
                        '            </tr>',
                        '        </tbody>',
                        '    </table>',
                        '</div>',
                        ''
                    ]
                },
                {
                    xtype: 'container',
                    flex: 0.8,
                    name: 'ctn_bottons_product',
                    padding: 5,
                    layout: {
                        type: 'hbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.getCmp('ctn_product_view').fn_find_product(null);
                                Ext.getCmp('data_view_product').setStore('');
                                Ext.ComponentQuery.query('[itemId=search_field_product]')[0].setValue('');
                                Ext.getCmp('ctn_product_view').getViewModel().set('filtro',null);
                            },
                            cls: 'color-buttons',
                            height: 50,
                            id: 'btn_refresh_product',
                            ui: 'round',
                            width: 50,
                            margin: '0 5 0 0',
                            iconCls: 'x-fa fa-refresh blackIcon'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var filter = Ext.getCmp('ctn_product_view').getViewModel().get('filtro');
                                if(filter != null){
                                    Ext.Msg.show({
                                        title: 'Confirmación',
                                        message: "¿Esta seguro de eliminar el producto con codigo "+filter+"?",
                                        width: 300,
                                        closable: false,
                                        buttons: [{
                                            text: 'No',
                                            itemId: 'no'
                                        }, {
                                            text: 'Si',
                                            itemId: 'yes'
                                        }],
                                        multiline: false,
                                        fn: function (buttonValue, inputText, showConfig) {
                                            if(buttonValue === "yes"){


                                                Ext.Ajax.request({
                                                    url: 'productoController/eliminarProducto?codigo='+filter,
                                                    method: 'GET',
                                                    success: function(response, opts) {
                                                        Ext.getCmp('ctn_product_view').fn_find_product(null);
                                                        Ext.getCmp('data_view_product').setStore('');
                                                        Ext.getCmp('ctn_product_view').getViewModel().set('filtro',null);
                                                        Ext.ComponentQuery.query('[itemId=search_field_product]')[0].setValue('');
                                                        var info =Ext.getCmp('ctn_statistics_view').getViewModel().get('filtro');
                                                        Ext.getCmp('ctn_statistics_view').fn_find_statistcs(info);
                                                        Ext.toast('Exito al eliminar', 1000);

                                                    },
                                                    failure: function(response, opts) {
                                                        Ext.toast('Error al llevar a cabo el proceso, El cliente esta vinculado a una factura', 1000);
                                                    }
                                                });
                                            }else{
                                                this.close();
                                            }
                                        },
                                        icon: Ext.Msg.QUESTION
                                    });


                                }else{
                                    Ext.toast('Seleccione un producto', 1000);
                                }
                            },
                            cls: 'color-buttons',
                            height: 50,
                            name: 'btn_delete_product',
                            ui: 'round',
                            width: 50,
                            margin: '0 5 0 0',
                            iconCls: 'x-fa fa-trash blackIcon'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var filter = Ext.getCmp('ctn_product_view').getViewModel().get('filtro');
                                if(filter != null){
                                    var vtn = Ext.create('widget.vtn_generar_producto',{
                                        title : '¡ EDITAR PRODUCTO !'
                                    }).show();
                                    Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleProducto',true);
                                    var store = Ext.getStore('store_gestion_producto');
                                    var record = store.findRecord('codigo', filter, 0, false, true, true);
                                    var form =Ext.getCmp('frm_productos');
                                    form.setRecord(record);
                                    Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleCrearFactura',true);
                                    Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleSaveFactura',false);
                                }else{
                                    Ext.toast('Seleccione un producto', 1000);
                                }
                            },
                            cls: 'color-buttons',
                            height: 50,
                            name: 'btn_edit_product',
                            ui: 'round',
                            width: 50,
                            margin: '0 5 0 0',
                            iconCls: 'x-fa fa-pencil-square-o blackIcon'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var vtn = Ext.create('widget.vtn_generar_producto',{
                                    title : '¡ NUEVO PRODUCTO !'
                                }).show();
                                Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleCrearFactura',true);
                                Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleSaveFactura',false);
                                Ext.getCmp('vtn_generar_producto').getViewModel().set('detalleProducto',true);
                            },
                            cls: 'color-buttons',
                            height: 50,
                            name: 'btn_add_product',
                            ui: 'round',
                            width: 50,
                            iconCls: 'x-fa fa-plus blackIcon'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'container',
            flex: 4.5,
            name: 'ctn_grid_product',
            padding: '30 30 0 30',
            items: [
                {
                    xtype: 'container',
                    height: '100%',
                    name: 'ctn_medium_product',
                    width: '100%',
                    layout: {
                        type: 'vbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'container',
                            height: '70%',
                            name: 'ctn_internal_product',
                            width: '100%',
                            items: [
                                {
                                    xtype: 'grd_product',
                                    itemId: 'grd_product_view'
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        initialize: {
            fn: 'onCtn_product_viewInitialize',
            scope: 'controller'
        }
    },

    onSearch_field_productKeyup: function(textfield, e, eOpts) {
        var filter= textfield.getValue();
        if (e.event.keyCode == 13){
            Ext.getCmp('ctn_product_view').fn_find_product(filter);
            Ext.getCmp('data_view_product').setStore('store_gestion_producto');
            Ext.getCmp('ctn_product_view').getViewModel().set('filtro',filter);
        }
        if(!textfield.getValue()){
            Ext.getCmp('ctn_product_view').fn_find_product(null);
            Ext.getCmp('data_view_product').setStore('');
        }
    },

    fn_find_product: function(filter) {

        var storeProduct = Ext.getStore('store_gestion_producto');
        storeProduct.proxy.extraParams ={
            filtro : filter
        };


        storeProduct.load({
            params:{
                filtro:filter
            },
            callback: function(records, operation, success) {
                if(success){
                    var noAlmacenado=false;
                    var total = storeProduct.totalCount;
                    if(total === 0){
                        //Ext.getCmp('ctn_product_view').fn_find_product(null);
                        Ext.getCmp('data_view_product').setStore('');
                        Ext.ComponentQuery.query('[itemId=search_field_product]')[0].setValue('');
                        Ext.getCmp('ctn_product_view').getViewModel().set('filtro',null);
                        Ext.toast('No hay resultados para la búsqueda',1000);
                    }

                }
            }

        });

    }

});